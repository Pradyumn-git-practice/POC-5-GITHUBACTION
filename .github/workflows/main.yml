name: Capstone Project 

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{vars.AWS_REGION}}
  ECR_REGISTRY: ${{vars.ECR_REGISTRY}}
  SONAR_HOST_URL: ${{vars.SONAR_HOST_URL}}
  SONAR_PROJECT_KEY: ${{vars.SONAR_PROJECT_KEY}}
jobs:
  build-and-deploy:
    runs-on: [self-hosted,ec2-label]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: SonarQube Scan with Quality Gate
        uses: sonarsource/sonarqube-scan-action@v4.2.0
        with:
          args: >
            -Dsonar.projectKey=githubaction
            -Dsonar.sources=.
            -Dsonar.java.binaries=target/classes
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

      - name: Build Docker Image
        run: docker build -t ${{ env.ECR_REGISTRY }}:${{ github.run_number }} .

      - name: Trivy Security Scan 
        run: trivy image --exit-code 0 --severity HIGH,CRITICAL --format json -o trivy-report.json ${{ env.ECR_REGISTRY }}:${{ github.run_number }}

      - name: ECR login
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{env.ECR_REGISTRY}}


      - name: Push to ECR
        run: docker push ${{ env.ECR_REGISTRY }}:${{ github.run_number }}

      - name: Deploy to Kubernetes
        run: |
          sed "s|IMAGE_TAG|${{ github.run_number }}|g" k8s/deployment.yaml > k8s/deployment.generated.yaml
          kubectl apply -f k8s/deployment.generated.yaml
